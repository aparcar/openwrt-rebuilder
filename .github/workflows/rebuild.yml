name: Rebuild OpenWrt

on:
  push:

  workflow_dispatch:
    inputs:
      version:
        description: "OpenWrt version to build"
        required: false
        default: "SNAPSHOT"
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.version }} - ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      matrix:
        version:
          - SNAPSHOT
          - 24.10.2
        target:
          - "ath79/generic"
          - "ipq40xx/generic"
          - "mediatek/filogic"
          - "mediatek/mt7622"
          - "ramips/mt7621"
          - "x86/64"

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            build-essential \
            ccache \
            curl \
            file \
            gawk \
            g++-multilib \
            gcc-multilib \
            genisoimage \
            git-core \
            gosu \
            libdw-dev \
            libelf-dev \
            libncurses5-dev \
            locales \
            pv \
            pwgen \
            python3 \
            python3-venv \
            python3-pip \
            python3-pyelftools \
            python3-cryptography \
            qemu-utils \
            rsync \
            signify-openbsd \
            subversion \
            swig \
            unzip \
            wget \
            zstd \
            podman \
            disorderfs \
            llvm

      - name: Setup disorderfs
        run: |
          mkdir -p original
          ln -s original reversed
          # mkdir -p original reversed
          # disorderfs original reversed

      - uses: actions/checkout@v5
        with:
          path: reversed/

      - name: Run rebuilder on ${{ matrix.target }}
        run: |
          cd reversed/
          python3 -u rebuild.py
        env:
          TARGET: ${{ matrix.target }}
          VERSION: ${{ github.event.inputs.version || matrix.version }}
          USE_DIFFOSCOPE: True

      - name: Slug target name
        if: always()
        run: echo "target_slug=$(echo ${{ matrix.target }} | tr '/' '_')" >> "$GITHUB_ENV"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rebuild-${{ matrix.version }}-${{ env.target_slug }}
          path: original/build/${{ github.event.inputs.version || matrix.version }}/bin/

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: results-${{ matrix.version }}-${{ env.target_slug }}
          path: original/results/
