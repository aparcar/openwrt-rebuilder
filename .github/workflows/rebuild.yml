name: Rebuild OpenWrt

on:
  push:

  workflow_dispatch:
    inputs:
      version:
        description: "OpenWrt version to build"
        required: false
        default: "SNAPSHOT"
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CCACHE_DIR: /tmp/ccache
  CCACHE_MAXSIZE: 10G
  CCACHE_COMPRESS: 1
  CCACHE_COMPRESSLEVEL: 6

jobs:
  build:
    name: ${{ matrix.version }} - ${{ matrix.target }}
    runs-on: self-hosted
    strategy:
      fail-fast: False
      matrix:
        version:
          - SNAPSHOT
          - 24.10.2
        target:
          - "ath79/generic"
          - "ipq40xx/generic"
          - "mediatek/filogic"
          - "mediatek/mt7622"
          - "ramips/mt7621"
          - "x86/64"
    steps:
      - uses: actions/checkout@v5

      - name: Setup ccache
        run: |
          mkdir -p $CCACHE_DIR
          ccache --show-config
          ccache --zero-stats

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.version }}-${{ matrix.target }}-${{ github.sha }}
          restore-keys: |
            ccache-${{ matrix.version }}-${{ matrix.target }}-
            ccache-${{ matrix.version }}-
            ccache-

      - name: Cache OpenWrt git repository
        uses: actions/cache@v4
        with:
          path: ./build/${{ github.event.inputs.version || matrix.version }}/.git
          key: openwrt-git-${{ matrix.version }}-${{ github.sha }}
          restore-keys: |
            openwrt-git-${{ matrix.version }}-
            openwrt-git-

      - name: Cache downloads
        uses: actions/cache@v4
        with:
          path: ./build/${{ github.event.inputs.version || matrix.version }}/dl
          key: openwrt-dl-${{ matrix.version }}-${{ hashFiles('**/feeds.conf*', '**/feeds.buildinfo*') }}
          restore-keys: |
            openwrt-dl-${{ matrix.version }}-
            openwrt-dl-

      - name: Cache feeds
        uses: actions/cache@v4
        with:
          path: |
            ./build/${{ github.event.inputs.version || matrix.version }}/feeds
            ./build/${{ github.event.inputs.version || matrix.version }}/package/feeds
          key: openwrt-feeds-${{ matrix.version }}-${{ hashFiles('**/feeds.conf*', '**/feeds.buildinfo*') }}
          restore-keys: |
            openwrt-feeds-${{ matrix.version }}-
            openwrt-feeds-

      # - name: Cache build tools
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ./build/${{ github.event.inputs.version || matrix.version }}/build_dir/host
      #       ./build/${{ github.event.inputs.version || matrix.version }}/staging_dir/host
      #       ./build/${{ github.event.inputs.version || matrix.version }}/staging_dir/hostpkg
      #     key: openwrt-tools-${{ matrix.version }}-${{ matrix.target }}-${{ hashFiles('**/config.buildinfo*') }}
      #     restore-keys: |
      #       openwrt-tools-${{ matrix.version }}-${{ matrix.target }}-
      #       openwrt-tools-${{ matrix.version }}-
      #       openwrt-tools-

      # - name: Cache toolchain
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ./build/${{ github.event.inputs.version || matrix.version }}/build_dir/toolchain-*
      #       ./build/${{ github.event.inputs.version || matrix.version }}/staging_dir/toolchain-*
      #     key: openwrt-toolchain-${{ matrix.version }}-${{ matrix.target }}-${{ hashFiles('**/config.buildinfo*') }}
      #     restore-keys: |
      #       openwrt-toolchain-${{ matrix.version }}-${{ matrix.target }}-
      #       openwrt-toolchain-${{ matrix.version }}-
      #       openwrt-toolchain-

      - name: Run rebuilder on ${{ matrix.target }}
        run: |
          python3 -u rebuild.py
        env:
          TARGET: ${{ matrix.target }}
          VERSION: ${{ github.event.inputs.version || matrix.version }}
          USE_DIFFOSCOPE: True
          CC: ccache gcc
          CXX: ccache g++

      - name: Show ccache statistics
        if: always()
        run: |
          ccache --show-stats
          ccache --show-config

      - name: Slug target name
        if: always()
        run: echo "target_slug=$(echo ${{ matrix.target }} | tr '/' '_')" >> "$GITHUB_ENV"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rebuild-${{ github.event.inputs.version || matrix.version }}-${{ env.target_slug }}
          path: build/${{ github.event.inputs.version || matrix.version }}/bin/

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: results-${{ github.event.inputs.version || matrix.version }}-${{ env.target_slug }}
          path: results/${{ github.event.inputs.version || matrix.version }}/${{ matrix.target }}/

  overview:
    name: Generate Overview
    runs-on: ubuntu-latest
    needs: build
    if: always()

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - uses: actions/checkout@v5

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: results-*
          path: results/

      - name: Combine results and generate hierarchical overview
        run: |
          mkdir -p combined_results/
          python3 -u ./scripts/combine_results.py

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: combined_results/
