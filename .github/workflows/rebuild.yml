name: Rebuild OpenWrt

on:
  push:
    branches:
      - main

  workflow_dispatch: {}

jobs:
  build:
    name: ${{ matrix.version }} - ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      matrix:
        version:
          - SNAPSHOT
        target:
          - "ath79/generic"
          - "ipq40xx/generic"
          - "mediatek/mt7622"
          - "ramips/mt7621"
          - "x86/generic"
          - "x86/64"

    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.10"

      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get -y install libncurses-dev qemu-utils clang-12 \
            build-essential ccache ecj fastjar file g++ gawk \
            gettext git java-propose-classpath libelf-dev libncurses5-dev \
            libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget \
            python3-distutils python3-setuptools python3-dev rsync subversion \
            swig time xsltproc zlib1g-dev mkisofs
          sudo apt-get -y install \
            diffoscope \
            python3-pip \
            u-boot-tools \
            squashfs-tools \
            libguestfs-tools \
            disorderfs \
            binutils

          pip install diffoscope

      - name: Setup disorderfs
        run: |
          mkdir -p original reversed
          disorderfs original reversed

      - uses: actions/checkout@v2
        with:
          path: reversed/

      - name: Run rebuilder on ${{ matrix.target }}
        run: |
          cd reversed/
          python3 -u rebuild.py
        env:
          TARGET: ${{ matrix.target }}
          RESULTS_DIR: ./results
          VERSION: ${{ matrix.version }}
          USE_DIFFOSCOPE: True

      - name: Cleanup build root
        run: |
          rm -rf original/openwrt/staging_dir original/openwrt/build_dir

      - name: Sanitize target
        run: echo "target_sani=$(echo ${{ matrix.target }} | tr '/' '_')" >> "$GITHUB_ENV"

      - uses: actions/upload-artifact@v2
        with:
          name: rebuild-${{ matrix.version }}-${{ env.target_sani }}
          path: original/openwrt/bin/

      - uses: actions/upload-artifact@v2
        with:
          name: results-${{ matrix.version }}-${{ env.target_sani }}
          path: original/results/

      - name: Upload packages to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: libremesh/lime-feed
          publish_dir: bin/packages/x86_64/libremesh/
          destination_dir: ${{ env.DEST_DIR }}

  deploy:
    runs-on: ubuntu-latest

    needs:
      - build

    if: github.ref == 'refs/heads/master'

    steps:
      - name: Download rebuild results
        uses: actions/download-artifact@v2
        with:
          path: results

      - name: Flatten the artifacts hierarchy
        run: |
          rsync -avh --remove-source-files results/results-*/ results/
          find results/ -type d -empty -delete

      - name: Upload results
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: aparcar/openwrt-rebuild-results
          publish_dir: results/
